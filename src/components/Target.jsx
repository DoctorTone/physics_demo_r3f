/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from "react";
import { useGLTF } from "@react-three/drei";
import useStore from "../state/store.jsx";

const Target = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF("src/assets/target.gltf");
  const targetsHit = useStore((state) => state.targetsHit);
  const [beenHit, setBeenHit] = useState(false);
  const [hitSound] = useState(() => new Audio("./audio/success.wav"));

  useEffect(() => {
    if (targetsHit[group.current.name]) {
      setBeenHit(true);
      hitSound.volume = 0.25;
      hitSound.play();
    }
  }, [targetsHit]);

  return (
    <group ref={group} {...props} dispose={null} name={props.name}>
      <group rotation={[Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.Cylinder015.geometry}>
          {beenHit ? (
            <meshStandardMaterial color="grey" />
          ) : (
            <meshStandardMaterial color="red" />
          )}
        </mesh>
        <mesh
          geometry={nodes.Cylinder015_1.geometry}
          material={materials["White.024"]}
        />
      </group>
    </group>
  );
};

useGLTF.preload("src/assets/target.gltf");

export default Target;
